package com.jonahseguin.papaya.util.minecraft;

import lombok.Getter;

import java.util.*;

import org.bukkit.Material;
import static com.jonahseguin.papaya.util.minecraft.PBlockAttribute.*;

/**
 * Created by Jonah on 5/30/2018.
 * Project: papaya
 *
 * @ 10:01 PM
 */
@Getter
public enum PapayaBlock {

    AIR(0, TRANSPARENT, CAN_ENTER),
    STONE(1, SOLID),
    GRASS(2, SOLID),
    DIRT(3, SOLID),
    COBBLESTONE(4, SOLID),
    WOOD_PLANK(5, SOLID),
    SAPLING(6, TRANSPARENT, CAN_ENTER),
    BEDROCK(7, SOLID),
    FLOWING_WATER(8, LIQUID, CAN_ENTER),
    STILL_WATER(9, LIQUID, CAN_ENTER),
    FLOWING_LAVA(10, LIQUID, CAN_ENTER),
    STILL_LAVA(11, LIQUID, CAN_ENTER),
    SAND(12, SOLID, HAS_GRAVITY, CAN_ENTER), // can enter because of gravity
    GRAVEL(13, SOLID, HAS_GRAVITY, CAN_ENTER),
    GOLD_ORE(14, SOLID),
    IRON_ORE(15, SOLID),
    COAL_ORE(16, SOLID),
    WOOD(17, SOLID),
    LEAVES(18, SOLID),
    SPONGE(19, SOLID),
    GLASS(20, SOLID),
    LAPIS_ORE(21, SOLID),
    LAPIS_BLOCK(22, SOLID),
    DISPENSER(23, SOLID),
    SANDSTONE(24, SOLID),
    NOTE_BLOCK(25, SOLID),
    BED(26, SOLID, NOT_FULL_SIZED, CAN_ENTER),
    POWERED_RAIL(27, SOLID, NOT_FULL_SIZED, CAN_ENTER),
    DETECTOR_RAIL(28, SOLID, NOT_FULL_SIZED, CAN_ENTER),
    STICKY_PISTON(29, SOLID, NOT_FULL_SIZED, CAN_ENTER),
    COBWEB(30, SOLID, CAN_ENTER),
    DEAD_SHRUB(31, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    DEAD_BUSH(32, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    PISTON(33, SOLID),
    PISTON_HEAD(34, SOLID, NOT_FULL_SIZED, CAN_ENTER),
    WOOL(35, SOLID),
    DANDELION(37, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    POPPY(38, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    BROWN_MUSHROOM(39, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    RED_MUSHROOM(40, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    GOLD_BLOCK(41, SOLID),
    IRON_BLOCK(42, SOLID),
    DOUBLE_SLAB(43, SOLID),
    SLAB(44, NOT_FULL_SIZED, SOLID),
    BRICKS(45, SOLID),
    TNT(46, SOLID),
    BOOKSHELF(47, SOLID),
    MOSS_STONE(48, SOLID),
    OBSIDIAN(49, SOLID),
    TORCH(50, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    FIRE(51, TRANSPARENT, CAN_ENTER),
    MONSTER_SPAWNER(52, SOLID),
    OAK_WOOD_STAIRS(53, SOLID, STAIRS),
    CHEST(54, SOLID, NOT_FULL_SIZED),
    REDSTONE_WIRE(55, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    DIAMOND_ORE(56, SOLID),
    DIAMOND_BLOCK(57, SOLID),
    CRAFTING_TABLE(58, SOLID),
    WHEAT_CROPS(59, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    FARMLAND(60, SOLID, NOT_FULL_SIZED),
    FURNACE(61, SOLID),
    BURNING_FURNACE(62, SOLID),
    STANDING_SIGN(63, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    OAK_DOOR(64, DOUBLE_SIZED, SOLID, ENTERABLE),
    LADDER(65, CLIMBABLE, SOLID),
    RAIL(66, SOLID, NOT_FULL_SIZED, CAN_ENTER),
    COBBLESTONE_STAIRS(67, SOLID, STAIRS),
    WALL_SIGN(68, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    LEVER(69, CAN_ENTER, TRANSPARENT, NOT_FULL_SIZED),
    STONE_PRESSURE_PLATE(70, CAN_ENTER, TRANSPARENT, NOT_FULL_SIZED),
    IRON_DOOR(71, ENTERABLE, SOLID, DOUBLE_SIZED),
    WOODEN_PRESSURE_PLATE(72, CAN_ENTER, TRANSPARENT, NOT_FULL_SIZED),
    REDSTONE_ORE(73, SOLID),
    GLOWING_REDSTONE_ORE(74, SOLID),
    REDSTONE_TORCH_OFF(75, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    REDSTONE_TORCH_ON(76, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    STONE_BUTTON(77, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    SNOW_LAYER(78, NOT_FULL_SIZED, SOLID), // This could cause issues.  Maybe add CAN_ENTER?
    ICE(79, SOLID, SPEEDS_UP),
    SNOW_BLOCK(80, SOLID),
    CACTUS(81, NOT_FULL_SIZED, SOLID),
    CLAY(82, SOLID),
    SUGAR_CANES(83, TRANSPARENT, CAN_ENTER),
    JUKEBOX(84, SOLID),
    FENCE(85, SOLID, FENCE_WALL, PREVENT_H_PASS),
    PUMPKIN(86, SOLID),
    NETHERRACK(87, SOLID),
    SOUL_SAND(88, SOLID, SLOWS_DOWN, NOT_FULL_SIZED),
    GLOWSTONE(89, SOLID),
    NETHER_PORTAL(90, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    JACK_O_LANTERN(91, SOLID),
    CAKE_BLOCK(92, SOLID, NOT_FULL_SIZED),
    REDSTONE_REPEATER_BLOCK_OFF(93, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    REDSTONE_REPEATER_BLOCK_ON(94, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    STAINED_GLASS(95, SOLID, PREVENT_V_CLIP, PREVENT_H_PASS),
    WOODEN_TRAPDOOR(96, SOLID, NOT_FULL_SIZED, ENTERABLE, CAN_ENTER),
    STONE_MONSTER_EGG(97, SOLID),
    STONE_BRICKS(98, SOLID),
    BROWN_MUSHROOM_BLOCK(99, SOLID),
    RED_MUSHROOM_BLOCK(100, SOLID),
    IRON_BARS(101, SOLID, CAN_ENTER, NOT_FULL_SIZED, PREVENT_H_PASS),
    GLASS_PANE(102, SOLID, CAN_ENTER, NOT_FULL_SIZED, PREVENT_H_PASS),
    MELON_BLOCK(103, SOLID),
    PUMPKIN_STEM(104, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    MELON_STEM(105, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    VINES(106, TRANSPARENT, CAN_ENTER, CLIMBABLE),
    FENCE_GATE(107, ENTERABLE, SOLID, NOT_FULL_SIZED, PREVENT_H_PASS),
    BRICK_STAIRS(108, SOLID, STAIRS),
    STONE_BRICK_STAIRS(109, SOLID, STAIRS),
    MYCELIUM(110, SOLID),
    LILY_PAD(111, SOLID, NOT_FULL_SIZED, PREVENT_V_CLIP, CAN_ENTER),
    NETHER_BRICK(112, SOLID),
    NETHER_BRICK_FENCE(113, SOLID, PREVENT_H_PASS, FENCE_WALL),
    NETHER_BRICK_STAIRS(114, SOLID, STAIRS),
    NETHER_WART(115, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    ENCHANTMENT_TABLE(116, NOT_FULL_SIZED, SOLID),
    BREWING_STAND(117, NOT_FULL_SIZED, SOLID, CAN_ENTER),
    CAULDRON(118, SOLID, CAN_ENTER),
    END_PORTAL(119, TRANSPARENT, CAN_ENTER),
    END_PORTAL_FRAME(120, SOLID, NOT_FULL_SIZED),
    END_STONE(121, SOLID),
    DRAGON_EGG(122, SOLID, NOT_FULL_SIZED, CAN_ENTER), // can enter because can be teleported on top of a player /etc
    REDSTONE_LAMP_OFF(123, SOLID),
    REDSTONE_LAMP_ON(124, SOLID),
    DOUBLE_WOOD_SLAB(125, SOLID),
    WOOD_SLAB(126, SOLID, NOT_FULL_SIZED),
    COCOA(127, SOLID, NOT_FULL_SIZED, CAN_ENTER),
    SANDSTONE_STAIRS(128, STAIRS, SOLID),
    EMERALD_ORE(129, SOLID),
    ENDER_CHEST(130, SOLID, NOT_FULL_SIZED),
    TRIPWIRE_HOOK(131, TRANSPARENT, NOT_FULL_SIZED, CAN_ENTER),
    TRIPWIRE(132, TRANSPARENT, NOT_FULL_SIZED, CAN_ENTER),
    EMERALD_BLOCK(133, SOLID),
    SPRUCE_WOOD_STAIRS(134, SOLID, STAIRS),
    BIRCH_WOOD_STAIRS(135, SOLID, STAIRS),
    JUNGLE_WOOD_STAIRS(136, SOLID, STAIRS),
    COMMAND_BLOCK(137, SOLID),
    BEACON(138, SOLID),
    COBBLESTONE_WALL(139, SOLID, FENCE_WALL, NOT_FULL_SIZED),
    FLOWER_POT(140, NOT_FULL_SIZED, CAN_ENTER, SOLID),
    CARROTS(141, TRANSPARENT, NOT_FULL_SIZED, CAN_ENTER),
    POTATOES(142, TRANSPARENT, NOT_FULL_SIZED, CAN_ENTER),
    WOODEN_BUTTON(143, TRANSPARENT, NOT_FULL_SIZED, CAN_ENTER),
    MOB_HEAD(144, SOLID, NOT_FULL_SIZED, CAN_ENTER),
    ANVIL(145, SOLID, NOT_FULL_SIZED, HAS_GRAVITY, CAN_ENTER), // can enter because anvil can fall on top of player
    TRAPPED_CHEST(146, SOLID, NOT_FULL_SIZED),
    WEIGHTED_PRESSURE_PLATE_LIGHT(147, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    WEIGHTED_PRESSURE_PLATE_HEAVY(148, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    REDSTONE_COMPARATOR_OFF(149, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    REDSTONE_COMPARATOR_ON(150, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    DAYLIGHT_SENSOR(151, SOLID, NOT_FULL_SIZED), // check this?
    REDSTONE_BLOCK(152, SOLID),
    NETHER_QUARTZ_ORE(153, SOLID),
    HOPPER(154, SOLID, CAN_ENTER, NOT_FULL_SIZED),
    QUARTZ_BLOCK(155, SOLID),
    QUARTZ_STAIRS(156, SOLID, STAIRS),
    ACTIVATOR_RAIL(157, SOLID, NOT_FULL_SIZED, CAN_ENTER),
    DROPPER(158, SOLID),
    STAINED_HARDENED_CLAY(159, SOLID),
    STAINED_GLASS_PANE(160, SOLID, CAN_ENTER, NOT_FULL_SIZED, PREVENT_H_PASS),
    ACACIA_LEAVES(161, SOLID, CAN_ENTER),
    ACACIA_WOOD(162, SOLID),
    ACACIA_WOOD_STAIRS(163, SOLID, STAIRS),
    DARK_OAK_WOOD_STAIRS(164, SOLID, STAIRS),
    SLIME_BLOCK(165, SOLID),
    BARRIER(166, SOLID, PREVENT_H_PASS, PREVENT_V_CLIP),
    IRON_TRAPDOOR(167, SOLID, NOT_FULL_SIZED, ENTERABLE),
    PRISMARINE(168, SOLID),
    SEA_LANTERN(169, SOLID),
    HAY_BALER(170, SOLID),
    CARPET(171, SOLID, NOT_FULL_SIZED), // could have glitches with this: add CAN_ENTER?
    HARDENED_CLAY(172, SOLID),
    COAL_BLOCK(173, SOLID),
    PACKED_ICE(174, SOLID),
    DOUBLE_PLANT(175, TRANSPARENT, CAN_ENTER, DOUBLE_SIZED), // sunflower, lilac, double tallgrass, large fern, rose bush, peony
    STANDING_BANNER(176, TRANSPARENT, CAN_ENTER, DOUBLE_SIZED),
    WALL_MOUNTED_BANNER(177, TRANSPARENT, CAN_ENTER, DOUBLE_SIZED),
    INVERTED_DAYLIGHT_SENSOR(178, SOLID, NOT_FULL_SIZED), // could have glitches: CAN_ENTER?
    RED_SANDSTONE(179, SOLID),
    RED_SANDSTONE_SLAB(182, SOLID, NOT_FULL_SIZED),
    SPRUCE_FENCE_GATE(183, SOLID, ENTERABLE, PREVENT_H_PASS, FENCE_WALL, NOT_FULL_SIZED),
    BIRCH_FENCE_GATE(184, SOLID, ENTERABLE, PREVENT_H_PASS, FENCE_WALL, NOT_FULL_SIZED),
    JUNGLE_FENCE_GATE(185, SOLID, ENTERABLE, PREVENT_H_PASS, FENCE_WALL, NOT_FULL_SIZED),
    DARK_OAK_FENCE_GATE(186, SOLID, ENTERABLE, PREVENT_H_PASS, FENCE_WALL, NOT_FULL_SIZED),
    ACACIA_FENCE_GATE(187, SOLID, ENTERABLE, PREVENT_H_PASS, FENCE_WALL, NOT_FULL_SIZED),
    SPRUCE_FENCE(188, SOLID, PREVENT_H_PASS, FENCE_WALL),
    BIRCH_FENCE(189, SOLID, PREVENT_H_PASS, FENCE_WALL),
    JUNGLE_FENCE(190, SOLID, PREVENT_H_PASS, FENCE_WALL),
    DARK_OAK_FENCE(191, SOLID, PREVENT_H_PASS, FENCE_WALL),
    ACACIA_FENCE(192, SOLID, PREVENT_H_PASS, FENCE_WALL),
    SPRUCE_DOOR(193, SOLID, DOUBLE_SIZED, ENTERABLE),
    BIRCH_DOOR(194, SOLID, DOUBLE_SIZED, ENTERABLE),
    JUNGLE_DOOR(195, SOLID, DOUBLE_SIZED, ENTERABLE),
    ACACIA_DOOR(196, SOLID, DOUBLE_SIZED, ENTERABLE),
    DARK_OAK_DOOR(197, SOLID, DOUBLE_SIZED, ENTERABLE),
    END_ROD(198, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    CHORUS_PLANT(199, SOLID), // ?
    CHORUS_FLOWER(200, SOLID), // ?
    PURPUR_BLOCK(201, SOLID),
    PURPUR_PILLAR(202, SOLID),
    PURPUR_STAIRS(203, SOLID, STAIRS),
    PURPUR_DOUBLE_SLAB(204, SOLID),
    PURPUR_SLAB(205, SOLID, NOT_FULL_SIZED),
    END_STONE_BRICKS(206, SOLID),
    BEETROOT(207, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    GRASS_PATH(208, NOT_FULL_SIZED, SOLID),
    END_GATEWAY(209, TRANSPARENT, CAN_ENTER, NOT_FULL_SIZED),
    REPEATING_COMMAND_BLOCK(210, SOLID),
    CHAIN_COMMAND_BLOCK(211, SOLID),
    FROSTED_ICE(212, SOLID),
    MAGMA_BLOCK(213, SOLID),
    NETHER_WART_BLOCK(214, SOLID),
    RED_NETHER_BRICK(215, SOLID),
    BONE_BLOCK(216, SOLID),
    STRUCTURE_VOID(217, TRANSPARENT, CAN_ENTER),
    OBSERVER(218, SOLID),
    WHITE_SHULKER_BOX(219, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    ORANGE_SHULKER_BOX(220, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    MAGENTA_SHULKER_BOX(221, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    LIGHT_BLUE_SHULKER_BOX(222, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    YELLOW_SHULKER_BOX(223, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    LIME_SHULKER_BOX(224, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    PINK_SHULKER_BOX(225, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    GRAY_SHULKER_BOX(226, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    LIGHT_GRAY_SHULKER_BOX(227, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    CYAN_SHULKER_BOX(228, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    PURPLE_SHULKER_BOX(229, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    BLUE_SHULKER_BOX(230, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    BROWN_SHULKER_BOX(231, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    GREEN_SHULKER_BOX(232, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    RED_SHULKER_BOX(233, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    BLACK_SHULKER_BOX(234, SOLID, NOT_FULL_SIZED), // 1.5 blocks high
    WHITE_GLAZED_TERRACOTTA(235, SOLID),
    ORANGE_GLAZED_TERRACOTTA(236, SOLID),
    MAGENTA_GLAZED_TERRACOTTA(237, SOLID),
    LIGHT_BLUE_GLAZED_TERRACOTTA(238, SOLID),
    YELLOW_GLAZED_TERRACOTTA(239, SOLID),
    LIME_GLAZED_TERRACOTTA(240, SOLID),
    PINK_GLAZED_TERRACOTTA(241, SOLID),
    GRAY_GLAZED_TERRACOTTA(242, SOLID),
    LIGHT_GRAY_GLAZED_TERRACOTTA(243, SOLID),
    CYAN_GLAZED_TERRACOTTA(244, SOLID),
    PURPLE_GLAZED_TERRACOTTA(245, SOLID),
    BLUE_GLAZED_TERRACOTTA(246, SOLID),
    BROWN_GLAZED_TERRACOTTA(247, SOLID),
    GREEN_GLAZED_TERRACOTTA(248, SOLID),
    RED_GLAZED_TERRACOTTA(249, SOLID),
    BLACK_GLAZED_TERRACOTTA(250, SOLID),
    CONCRETE(251, SOLID),
    CONCRETE_POWDER(252, SOLID),
    STRUCTURE_BLOCK(255, TRANSPARENT, CAN_ENTER);

    public static final Map<Integer, PapayaBlock> IDS = new HashMap<>();
    private final int id;
    private final Material material;
    private final Set<PBlockAttribute> attributes = new HashSet<>();

    PapayaBlock(int id, PBlockAttribute... attributes) {
        this.id = id;
        this.material = Material.getMaterial(id);
        this.attributes.addAll(Arrays.asList(attributes));
    }

    static {
        for (PapayaBlock pb : PapayaBlock.values()) {
            IDS.put(pb.getId(), pb);
        }
    }

    public boolean canPlayerBeInside() {
        return (hasAttribute(SOLID) || hasAttribute(CAN_ENTER) || hasAttribute(LIQUID) || hasAttribute(HAS_GRAVITY)
                || hasAttribute(ENTERABLE) || hasAttribute(CLIMBABLE))
                && (!hasAttribute(PREVENT_H_PASS) && !hasAttribute(PREVENT_V_CLIP));
    }


    public boolean hasAttribute(PBlockAttribute attribute) {
        return attributes.contains(attribute);
    }

    public boolean canStandOn() {
        return hasAttribute(SOLID) || hasAttribute(FENCE_WALL) || hasAttribute(CLIMBABLE);
    }

    public static Set<PapayaBlock> matchesAnyAttributes(PBlockAttribute... attributes) {
        Set<PapayaBlock> blocks = new HashSet<>();
        for(PapayaBlock b : values()) {
            for (PBlockAttribute attr : attributes) {
                if (b.hasAttribute(attr)) {
                    blocks.add(b);
                    break;
                }
            }
        }
        return blocks;
    }

    public static Set<PapayaBlock> matchesAllAttributes(PBlockAttribute... attributes) {
        Set<PapayaBlock> blocks = new HashSet<>();
        for(PapayaBlock b : values()) {
            boolean has = true;
            for (PBlockAttribute attr : attributes) {
                if (!b.hasAttribute(attr)) {
                    has = false;
                    break;
                }
            }
            if (has) {
                blocks.add(b);
            }
        }
        return blocks;
    }

    public static PapayaBlock fromMaterial(Material material) {
        return fromID(material.getId());
    }

    public static PapayaBlock fromID(int id) {
        return IDS.get(id);
    }
}
